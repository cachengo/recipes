apiVersion: v1
kind: Service
metadata:
  namespace: zookeeper
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  namespace: zookeeper
  name: zk-cs
  labels:
    app: zk
spec:
  ports:
    - port: 2181
      name: client
  selector:
    app: zk
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: zookeeper
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
  namespace: zookeeper
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zk
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - zk
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        - command:
            - /bin/bash
            - -c
            - |-
              set -ex;
              mkdir -p /data;         
              if [[ ! -f "/data/myid" ]]; then
                hostindex=$HOSTNAME; let zooid=${hostindex: -1: 1}+1; echo $zooid > "/data/myid"
                echo "Zookeeper MyId: " $zooid
              fi
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: zookeeper:3.8.0
          name: zookeeper-init
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - name: zk-data
              mountPath: "/data"
      containers:
        - name: zookeeper
          image: "zookeeper:3.8.0"
          env:
            - name: ZOO_SERVERS
              value: "server.1=zk-0.zk-hs.zookeeper.svc.cluster.local:2888:3888;2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr,mntr"
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
          volumeMounts:
            - name: zk-data
              mountPath: "/data"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: zk-data
      spec:
        storageClassName: longhorn
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
